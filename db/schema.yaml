- kind: SpannerDatabase
  name: UserDatabase
  tables:
    - kind: Table
      name: User
      columns:
        - name: userId
          type: string
        - name: username
          type: string
        - name: passwordHashV1
          type: string
          nullable: true
        - name: recoveryEmail
          type: string
          nullable: true
        - name: totalAccounts
          type: float64
          nullable: true
        - name: createdTimeMs
          type: float64
          nullable: true
      primaryKeys:
        - userId
      indexes:
        - name: UniqueUsername
          columns:
            - username
          unique: true
      insert: InsertUser
      delete: DeleteUser
      get: GetUser
    - kind: Table
      name: Account
      columns:
        - name: userId
          type: string
        - name: accountId
          type: string
        - name: accountType
          type: AccountType
          import: "@phading/user_service_interface/account_type"
          nullable: true
        - name: naturalName
          type: string
          nullable: true
        - name: description
          type: string
          nullable: true
        - name: contactEmail
          type: string
          nullable: true
        - name: avatarSmallFilename
          type: string
          nullable: true
        - name: avatarLargeFilename
          type: string
          nullable: true
        - name: lastAccessedTimeMs
          type: float64
          nullable: true
        - name: createdTimeMs
          type: float64
          nullable: true
        - name: billingProfileStateVersion
          type: float64
          nullable: true
        - name: billingProfileState
          type: BillingProfileState
          import: "@phading/user_service_interface/node/billing_profile_state"
          nullable: true
        - name: capabilitiesVersion
          type: float64
          nullable: true
      columnGroups:
        - name: main
          columns:
            - userId
            - accountId
            - accountType
            - naturalName
            - contactEmail
            - avatarSmallFilename
            - avatarLargeFilename
            - lastAccessedTimeMs
            - billingProfileStateVersion
            - billingProfileState
            - capabilitiesVersion
      searchColumns:
        - name: fullText
          columnRefs:
            - naturalName
            - description
      primaryKeys:
        - accountId
      indexes:
        - name: ByUserAndLastAccessTimeMs
          columns:
            - userId
            - name: lastAccessedTimeMs
              desc: true
      searchIndexes:
        - name: ByFullText
          columns:
            - fullText
      insert: InsertAccount
      delete: DeleteAccount
      get: GetAccount
    - kind: Table
      name: VideoPlayerSettings
      columns:
        - name: accountId
          type: string
        - name: settings
          type: VideoPlayerSettings
          import: "@phading/user_service_interface/web/self/video_player_settings"
          nullable: true
      primaryKeys:
        - accountId
      insert: InsertVideoPlayerSettings
      delete: DeleteVideoPlayerSettings
      get: GetVideoPlayerSettings
      update: UpdateVideoPlayerSettings
    - kind: TaskTable
      name: AccountCapabilitiesUpdatingTask
      columns:
        - name: accountId
          type: string
        - name: capabilitiesVersion
          type: float64
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
        - capabilitiesVersion
      executionTimeIndex: AccountCapabilitiesUpdatingTaskByExecutionTimeMs
      insert: InsertAccountCapabilitiesUpdatingTask
      delete: DeleteAccountCapabilitiesUpdatingTask
      get: GetAccountCapabilitiesUpdatingTask
      listPendingTasks: ListPendingAccountCapabilitiesUpdatingTasks
      getMetadata: GetAccountCapabilitiesUpdatingTaskMetadata
      updateMetadata: UpdateAccountCapabilitiesUpdatingTaskMetadata
    - kind: TaskTable
      name: BillingProfileCreatingTask
      columns:
        - name: accountId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
      executionTimeIndex: BillingProfileCreatingTaskByExecutionTimeMs
      insert: InsertBillingProfileCreatingTask
      delete: DeleteBillingProfileCreatingTask
      get: GetBillingProfileCreatingTask
      listPendingTasks: ListPendingBillingProfileCreatingTasks
      getMetadata: GetBillingProfileCreatingTaskMetadata
      updateMetadata: UpdateBillingProfileCreatingTaskMetadata
    - kind: TaskTable
      name: EarningsProfileCreatingTask
      columns:
        - name: accountId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
      executionTimeIndex: EarningsProfileCreatingTaskByExecutionTimeMs
      insert: InsertEarningsProfileCreatingTask
      delete: DeleteEarningsProfileCreatingTask
      get: GetEarningsProfileCreatingTask
      listPendingTasks: ListPendingEarningsProfileCreatingTasks
      getMetadata: GetEarningsProfileCreatingTaskMetadata
      updateMetadata: UpdateEarningsProfileCreatingTaskMetadata
  updates:
    - name: UpdateUserTotalAccounts
      table: User
      where:
        op: =
        lColumn: userId
      set:
        - totalAccounts
    - name: UpdateUserPasswordHash
      table: User
      where:
        op: =
        lColumn: userId
      set:
        - passwordHashV1
    - name: UpdateUserRecoveryEmail
      table: User
      where:
        op: =
        lColumn: userId
      set:
        - recoveryEmail
    - name: UpdateAccountBillingProfileState
      table: Account
      where:
        op: =
        lColumn: accountId
      set:
        - billingProfileState
        - billingProfileStateVersion
        - capabilitiesVersion
    - name: UpdateAccountLastAccessedTime
      table: Account
      where:
        op: =
        lColumn: accountId
      set:
        - lastAccessedTimeMs
    - name: UpdateAccountContent
      table: Account
      where:
        op: =
        lColumn: accountId
      set:
        - naturalName
        - description
        - contactEmail
    - name: UpdateAccountAvatar
      table: Account
      where:
        op: =
        lColumn: accountId
      set:
        - avatarSmallFilename
        - avatarLargeFilename
  selects:
    - name: GetUserByUsername
      from: User
      where:
        op: =
        lColumn: username
      get:
        - all: true
    - name: ListLastAccessedAccounts
      from: Account
      where:
        op: =
        lColumn: userId
      orderBy:
        - column: lastAccessedTimeMs
          desc: true
      withLimit: true
      get:
        - columnGroup: main
    - name: SearchAccounts
      from: Account
      where:
        op: SEARCH
        lColumn: fullText
      orderBy:
        - func: SCORE
          column: fullText
          desc: true
      withLimit: true
      get:
        - columnGroup: main
        - func: SCORE
          column: fullText
    - name: ContinuedSearchAccounts
      from: Account
      where:
        op: AND
        exprs:
          - op: SEARCH
            lColumn: fullText
          - op: <
            func: SCORE
            lColumn: fullText
      orderBy:
        - func: SCORE
          column: fullText
          desc: true
      withLimit: true
      get:
        - columnGroup: main
        - func: SCORE
          column: fullText
    - name: GetAccountMain
      from: Account
      where:
        op: =
        lColumn: accountId
      get:
        - columnGroup: main
    - name: GetUserAndAccountAll
      from: User
      as: u
      join:
        - type: INNER
          with: Account
          as: a
          on:
            op: =
            lColumn: userId
            lTable: u
            rColumn: userId
      where:
        op: AND
        exprs:
          - op: =
            lColumn: userId
            lTable: u
          - op: =
            lColumn: accountId
            lTable: a
      get:
        - all: true
          table: u
        - all: true
          table: a
    - name: CheckPresenceOfVideoPlayerSettings
      from: VideoPlayerSettings
      where:
        op: =
        lColumn: accountId
      get:
        - accountId
  outputDdl: ./db/ddl
  outputSql: ./db/sql
